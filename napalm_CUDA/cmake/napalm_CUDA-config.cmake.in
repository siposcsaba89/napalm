include(CMakeFindDependencyMacro)
find_dependency(CUDA)
add_library(::cuda SHARED IMPORTED)
find_library(CUDA_DRIVER_API NAMES cuda PATHS ${CUDA_TOOLKIT_ROOT_DIR}/lib/x64/ NO_DEFAULT_PATH)
if (NOT CUDA_DRIVER_API)
    message(FATAL_ERROR "Coud not find cuda driver api library!")
endif()
set_property(TARGET ::cuda PROPERTY IMPORTED_IMPLIB_RELEASE ${CUDA_DRIVER_API})
set_property(TARGET ::cuda PROPERTY IMPORTED_LOCATION_RELEASE ${CUDA_DRIVER_API})
if (@CUDA_RUNTIME_COMPILE@)
    find_library(CUDA_NVRTC_API NAMES nvrtc PATHS ${CUDA_TOOLKIT_ROOT_DIR}/lib/x64/ NO_DEFAULT_PATH)
    if (NOT CUDA_NVRTC_API)
        message(STATUS "Coud not find cuda nvrtc library! Disabling runtime compilation.")
        set(CUDA_RUNTIME_COMPILE 0)
    else()
        set_property(TARGET ::cuda PROPERTY IMPORTED_LINK_INTERFACE_LIBRARIES_RELEASE ${CUDA_NVRTC_API})
    endif()
endif()
set_property(TARGET ::cuda PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_property(TARGET ::cuda PROPERTY INTERFACE_INCLUDE_DIRECTORIES
    $<INSTALL_INTERFACE:${CUDA_INCLUDE_DIRS}>  # <prefix>/include/mylib
    $<BUILD_INTERFACE:${CUDA_INCLUDE_DIRS}>  # <prefix>/include/mylib
)
include(${CMAKE_CURRENT_LIST_DIR}/@PROJECT_NAME@-targets.cmake)